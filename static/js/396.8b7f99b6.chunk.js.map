{"version":3,"file":"static/js/396.8b7f99b6.chunk.js","mappings":"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","sources":["hooks/api/fault-modeling-hook.js","pages/fault-modeling/EmptyCharts.js","pages/fault-modeling/ProbabilityCharts.js","pages/fault-modeling/Probability.js"],"sourcesContent":["import { useInfiniteQuery, useQuery } from '@tanstack/react-query';\nimport { faultModelingApi } from '@api/index';\nimport {\n  FAULT,\n  MODELING,\n  FLEET_ID,\n  FREQUENCY,\n  FAULT_MODELING_TREND,\n} from '@constants/query-key-factory';\n\nconst useFaultModelingList = filter => {\n  const copyFilter = { ...filter };\n\n  if (copyFilter.faultCd.length === 0) {\n    copyFilter.faultCd = null;\n  }\n  if (copyFilter.fleetId.length === 0) {\n    copyFilter.fleetId = null;\n  }\n  if (copyFilter.grade.length === 0) {\n    copyFilter.grade = null;\n  }\n\n  return useQuery({\n    queryKey: MODELING.list(copyFilter),\n    queryFn: () => {\n      return faultModelingApi.listFaultModeling(copyFilter);\n    },\n  });\n};\n\nconst useFaultList = filter => {\n  return useInfiniteQuery({\n    queryKey: FAULT.list(filter),\n    queryFn: () => faultModelingApi.listFault(filter),\n    getNextPageParam: lastPage => lastPage.nextPage ?? false,\n  });\n};\n\nconst useFleetIdList = id => {\n  return useQuery({\n    queryKey: FLEET_ID.detail(id),\n    queryFn: () => faultModelingApi.listFleetId(id),\n  });\n};\n\nconst useFrequencyGet = id => {\n  return useQuery({\n    queryKey: FREQUENCY.detail(id),\n    queryFn: () => faultModelingApi.getFrequency(id),\n    enabled: id.length > 0,\n    suspense: id.length > 0,\n  });\n};\n\nconst useFaultModelingTrendGet = id => {\n  return useQuery({\n    queryKey: FAULT_MODELING_TREND.detail(id),\n    queryFn: () => faultModelingApi.getFaultModelingTrend(id),\n    enabled: id.length > 0,\n    suspense: id.length > 0,\n  });\n};\n\nexport {\n  useFaultModelingList,\n  useFaultList,\n  useFleetIdList,\n  useFrequencyGet,\n  useFaultModelingTrendGet,\n};\n","import React from 'react';\n\nconst EmptyCharts = () => {\n  return (\n    <>\n      <div id=\"no_result2\" className=\"no_result\">\n        <span className=\"lang\" key=\"indivisualNoSearchValue\">\n          검색값 없음\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default EmptyCharts;\n","import React, { useMemo } from 'react';\nimport ReactECharts from 'echarts-for-react';\nimport * as echarts from 'echarts';\n\nconst ProbabilityCharts = ({ data, ...rest }) => {\n  const option = useMemo(() => {\n    let warning = 0;\n    const maxSize = data.length;\n    const countNprob = [];\n\n    data.forEach(info => {\n      warning = info.warning;\n      countNprob.push([info.count, info.prob]);\n    });\n\n    const newOption = {\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'cross',\n          label: {\n            backgroundColor: '#0e1f4c',\n          },\n        },\n      },\n      legend: {\n        right: '4%',\n        top: '5%',\n        itemGap: 20,\n        data: ['Bayesian', 'MLE', '이상 알람'],\n      },\n      grid: {\n        left: '6%',\n        right: '4%',\n        bottom: '8%',\n        top: '25%',\n        containLabel: true,\n      },\n      xAxis: {\n        type: 'value',\n        min: 0,\n        max: maxSize,\n        interval: 1,\n        boundaryGap: false,\n        axisTick: false,\n        splitLine: false,\n      },\n      yAxis: {\n        type: 'value',\n        min: 0,\n        position: 'left',\n        offset: 20,\n        interval: 0.03,\n        axisTick: false,\n        axisLine: { show: false },\n        splitLine: { show: true },\n        axisLabel: {\n          formatter: '{value}',\n        },\n      },\n      dataZoom: { type: 'inside' },\n      series: [\n        {\n          name: '확률 분포',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          symbolSize: 2,\n          itemStyle: {\n            color: '#0065ff',\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                { offset: 0, color: 'rgba(0,101,255,0.5)' },\n                { offset: 1, color: 'rgba(0,101,255,0.01)' },\n              ]),\n            },\n          },\n          markPoint: {\n            data: [{ type: 'max', name: '확률 분포' }],\n          },\n          markLine: {\n            data: [\n              {\n                name: '이상 알람',\n                valueIndex: 0,\n                lineStyle: {\n                  normal: {\n                    color: '#ed6c4b',\n                    type: 'solid',\n                    width: 2,\n                  },\n                },\n                label: {\n                  color: '#ed6c4b',\n                },\n                xAxis: warning,\n              },\n            ],\n          },\n          data: countNprob,\n        },\n        {\n          show: false,\n          name: '이상 알람',\n          type: 'line',\n          itemStyle: {\n            color: '#ed6c4b',\n          },\n        },\n      ],\n    };\n\n    return newOption;\n  }, [data]);\n\n  return (\n    <ReactECharts\n      option={option}\n      notMerge\n      lazyUpdate\n      theme=\"theme_name\"\n      style={{\n        height: '100%',\n      }}\n      {...rest}\n      // onChartReady={this.onChartReadyCallback}\n    />\n  );\n};\n\nexport default ProbabilityCharts;\n","import React from 'react';\nimport { useFrequencyGet } from '@hooks/api/fault-modeling-hook';\nimport EmptyCharts from './EmptyCharts';\nimport ProbabilityCharts from './ProbabilityCharts';\n\nconst Probability = ({ id }) => {\n  const { data = [] } = useFrequencyGet(id);\n  return (\n    <>{data.length > 0 ? <ProbabilityCharts data={data} /> : <EmptyCharts />}</>\n  );\n};\n\nexport default Probability;\n"],"names":["useFaultModelingList","filter","copyFilter","faultCd","length","fleetId","grade","useQuery","queryKey","MODELING","list","queryFn","faultModelingApi","useFaultList","useInfiniteQuery","FAULT","getNextPageParam","lastPage","_lastPage$nextPage","nextPage","useFleetIdList","id","FLEET_ID","detail","useFrequencyGet","FREQUENCY","enabled","suspense","useFaultModelingTrendGet","FAULT_MODELING_TREND","EmptyCharts","_jsx","_Fragment","children","className","_ref","data","rest","option","useMemo","warning","maxSize","countNprob","forEach","info","push","count","prob","tooltip","trigger","axisPointer","type","label","backgroundColor","legend","right","top","itemGap","grid","left","bottom","containLabel","xAxis","min","max","interval","boundaryGap","axisTick","splitLine","yAxis","position","offset","axisLine","show","axisLabel","formatter","dataZoom","series","name","smooth","symbol","symbolSize","itemStyle","color","areaStyle","normal","echarts","graphic","LinearGradient","markPoint","markLine","valueIndex","lineStyle","width","ReactECharts","notMerge","lazyUpdate","theme","style","height","ProbabilityCharts"],"sourceRoot":""}