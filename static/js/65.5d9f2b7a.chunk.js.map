{"version":3,"file":"static/js/65.5d9f2b7a.chunk.js","mappings":"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","sources":["constants/FAULT_MODELING.js","hooks/api/fault-modeling-hook.js","components/module/SearchButton.js","pages/fault-modeling/BreakdownCharts.js","pages/fault-modeling/EmptyCharts.js","pages/fault-modeling/Breakdown.js","pages/fault-modeling/ProbabilityCharts.js","pages/fault-modeling/Probability.js","pages/fault-modeling/FaultModeling.js"],"sourcesContent":["const CAR_NO = ['01', '02', '03', '04', '05', '06', '07', '08'];\n\nconst DEVICE = [\n  'ATC',\n  'BECU',\n  'BMS',\n  'CMSB',\n  'DCU',\n  'FDU',\n  'HVAC',\n  'PSD',\n  'RADIO',\n  'RTD',\n  'SIV',\n  'TCMS',\n  'VVVF',\n];\n\nconst GRADE = ['A', 'B', 'C', 'D', 'W'];\n\nconst PROTOCOL_TYPE = 'Step1_48';\n\nexport { GRADE, DEVICE, CAR_NO, PROTOCOL_TYPE };\n","import { useInfiniteQuery, useQuery } from '@tanstack/react-query';\nimport { faultModelingApi } from '@api/index';\nimport {\n  FAULT,\n  MODELING,\n  FLEET_ID,\n  FREQUENCY,\n  FAULT_MODELING_TREND,\n} from '@constants/query-key-factory';\n\nconst useFaultModelingList = filter => {\n  const copyFilter = { ...filter };\n\n  if (copyFilter.faultCd.length === 0) {\n    copyFilter.faultCd = null;\n  }\n  if (copyFilter.fleetId.length === 0) {\n    copyFilter.fleetId = null;\n  }\n  if (copyFilter.grade.length === 0) {\n    copyFilter.grade = null;\n  }\n\n  return useQuery({\n    queryKey: MODELING.list(copyFilter),\n    queryFn: () => {\n      return faultModelingApi.listFaultModeling(copyFilter);\n    },\n  });\n};\n\nconst useFaultList = filter => {\n  return useInfiniteQuery({\n    queryKey: FAULT.list(filter),\n    queryFn: () => faultModelingApi.listFault(filter),\n    getNextPageParam: lastPage => lastPage.nextPage ?? false,\n  });\n};\n\nconst useFleetIdList = id => {\n  return useQuery({\n    queryKey: FLEET_ID.detail(id),\n    queryFn: () => faultModelingApi.listFleetId(id),\n  });\n};\n\nconst useFrequencyGet = id => {\n  return useQuery({\n    queryKey: FREQUENCY.detail(id),\n    queryFn: () => faultModelingApi.getFrequency(id),\n    enabled: id.length > 0,\n    suspense: id.length > 0,\n  });\n};\n\nconst useFaultModelingTrendGet = id => {\n  return useQuery({\n    queryKey: FAULT_MODELING_TREND.detail(id),\n    queryFn: () => faultModelingApi.getFaultModelingTrend(id),\n    enabled: id.length > 0,\n    suspense: id.length > 0,\n  });\n};\n\nexport {\n  useFaultModelingList,\n  useFaultList,\n  useFleetIdList,\n  useFrequencyGet,\n  useFaultModelingTrendGet,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport btIqSearch from '@assets/images/bt_iq_search.png';\nimport hideBtn from '@assets/images/hideBtn.png';\n\nconst SearchIcon = ({ text, ...props }) => {\n  return <a {...props}>{text}</a>;\n};\n\nconst SearchButton = styled(SearchIcon)`\n  left: ${props => (props.$show ? '-90px' : '-160px')};\n  position: absolute;\n  top: 14px;\n  width: 54px;\n  height: 54px;\n  background: ${props =>\n    props.$show ? `url(${hideBtn})` : `url(${btIqSearch})`};\n  border-radius: 100%;\n  text-indent: -9999px;\n  cursor: pointer;\n`;\n\nexport default SearchButton;\n","import React, { useMemo } from 'react';\nimport ReactECharts from 'echarts-for-react';\n\nconst BreakdownCharts = ({ data, ...rest }) => {\n  const option = useMemo(() => {\n    const detectTime = [];\n    const anomalyScore = [];\n    const frequency = [];\n    const expect = [];\n\n    data.forEach(info => {\n      detectTime.push(info.detect_time);\n      anomalyScore.push(info.anomaly_score);\n      expect.push(info.expect);\n      frequency.push(info.frequency);\n    });\n\n    const newOption = {\n      tooltip: {\n        trigger: 'axis',\n      },\n      legend: {\n        data: ['고장 발생 건수', '기대값', '이상 빈도 점수'],\n      },\n      xAxis: [\n        {\n          type: 'category',\n          data: detectTime,\n        },\n      ],\n      yAxis: [\n        {\n          type: 'value',\n        },\n      ],\n      series: [\n        {\n          name: '고장 발생 건수',\n          type: 'bar',\n          data: frequency,\n        },\n        {\n          name: '기대값',\n          type: 'bar',\n          data: expect,\n        },\n        {\n          name: '이상 빈도 점수',\n          type: 'bar',\n          data: anomalyScore,\n        },\n      ],\n    };\n\n    return newOption;\n  }, [data]);\n\n  return (\n    <ReactECharts\n      option={option}\n      notMerge\n      lazyUpdate\n      theme=\"theme_name\"\n      style={{\n        height: '100%',\n      }}\n      {...rest}\n      // onChartReady={this.onChartReadyCallback}\n    />\n  );\n};\n\nexport default BreakdownCharts;\n","import React from 'react';\n\nconst EmptyCharts = () => {\n  return (\n    <>\n      <div id=\"no_result2\" className=\"no_result\">\n        <span className=\"lang\" key=\"indivisualNoSearchValue\">\n          검색값 없음\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default EmptyCharts;\n","import React from 'react';\nimport { useFaultModelingTrendGet } from '@hooks/api/fault-modeling-hook';\nimport { Link } from 'react-router-dom';\nimport BreakdownCharts from './BreakdownCharts';\nimport EmptyCharts from './EmptyCharts';\n\nconst Breakdown = ({ id }) => {\n  const { data = [] } = useFaultModelingTrendGet(id);\n\n  return (\n    <>\n      <h3>고장추이</h3>\n\n      <Link\n        href=\"#n\"\n        className=\"bt_b_blue bt_download lang\"\n        key=\"operationDownload\"\n      >\n        다운로드\n      </Link>\n      <div className=\"graph\">\n        <div id=\"failureTrend\">\n          {data.length > 0 ? <BreakdownCharts data={data} /> : <EmptyCharts />}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Breakdown;\n","import React, { useMemo } from 'react';\nimport ReactECharts from 'echarts-for-react';\nimport * as echarts from 'echarts';\n\nconst ProbabilityCharts = ({ data, ...rest }) => {\n  const option = useMemo(() => {\n    let warning = 0;\n    const maxSize = data.length;\n    const countNprob = [];\n\n    data.forEach(info => {\n      warning = info.warning;\n      countNprob.push([info.count, info.prob]);\n    });\n\n    const newOption = {\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'cross',\n          label: {\n            backgroundColor: '#0e1f4c',\n          },\n        },\n      },\n      legend: {\n        right: '4%',\n        top: '5%',\n        itemGap: 20,\n        data: ['Bayesian', 'MLE', '이상 알람'],\n      },\n      grid: {\n        left: '6%',\n        right: '4%',\n        bottom: '8%',\n        top: '25%',\n        containLabel: true,\n      },\n      xAxis: {\n        type: 'value',\n        min: 0,\n        max: maxSize,\n        interval: 1,\n        boundaryGap: false,\n        axisTick: false,\n        splitLine: false,\n      },\n      yAxis: {\n        type: 'value',\n        min: 0,\n        position: 'left',\n        offset: 20,\n        interval: 0.03,\n        axisTick: false,\n        axisLine: { show: false },\n        splitLine: { show: true },\n        axisLabel: {\n          formatter: '{value}',\n        },\n      },\n      dataZoom: { type: 'inside' },\n      series: [\n        {\n          name: '확률 분포',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          symbolSize: 2,\n          itemStyle: {\n            color: '#0065ff',\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                { offset: 0, color: 'rgba(0,101,255,0.5)' },\n                { offset: 1, color: 'rgba(0,101,255,0.01)' },\n              ]),\n            },\n          },\n          markPoint: {\n            data: [{ type: 'max', name: '확률 분포' }],\n          },\n          markLine: {\n            data: [\n              {\n                name: '이상 알람',\n                valueIndex: 0,\n                lineStyle: {\n                  normal: {\n                    color: '#ed6c4b',\n                    type: 'solid',\n                    width: 2,\n                  },\n                },\n                label: {\n                  color: '#ed6c4b',\n                },\n                xAxis: warning,\n              },\n            ],\n          },\n          data: countNprob,\n        },\n        {\n          show: false,\n          name: '이상 알람',\n          type: 'line',\n          itemStyle: {\n            color: '#ed6c4b',\n          },\n        },\n      ],\n    };\n\n    return newOption;\n  }, [data]);\n\n  return (\n    <ReactECharts\n      option={option}\n      notMerge\n      lazyUpdate\n      theme=\"theme_name\"\n      style={{\n        height: '100%',\n      }}\n      {...rest}\n      // onChartReady={this.onChartReadyCallback}\n    />\n  );\n};\n\nexport default ProbabilityCharts;\n","import React from 'react';\nimport { useFrequencyGet } from '@hooks/api/fault-modeling-hook';\nimport { Link } from 'react-router-dom';\nimport EmptyCharts from './EmptyCharts';\nimport ProbabilityCharts from './ProbabilityCharts';\n\nconst Probability = ({ id }) => {\n  const { data = [] } = useFrequencyGet(id);\n\n  return (\n    <>\n      <h3>확률 분포</h3>\n      <Link\n        href=\"#n\"\n        className=\"bt_b_blue bt_download lang\"\n        key=\"operationDownload\"\n      >\n        다운로드\n      </Link>\n      <div className=\"graph\">\n        <div id=\"frequency\">\n          {data.length > 0 ? (\n            <ProbabilityCharts data={data} />\n          ) : (\n            <EmptyCharts />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Probability;\n","import React, { lazy, Suspense, useCallback, useState } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport SearchButton from '@components/module/SearchButton';\nimport Spinner from '@components/element/Spinner';\nimport { FAULTMODELING } from '@constants/index';\nimport Breakdown from './Breakdown';\nimport Probability from './Probability';\n\nconst defaultFilterOptions = {\n  protocol_type: FAULTMODELING.PROTOCOL_TYPE,\n  carNo: [...FAULTMODELING.CAR_NO],\n  device: [...FAULTMODELING.DEVICE],\n  grade: [...FAULTMODELING.GRADE],\n  fleet_id: [],\n  faultCd: [],\n  startDate: '2024-06-14',\n  endDate: '2024-06-16',\n};\n\nconst List = lazy(() => import('./List'));\nconst SideBar = lazy(() => import('./SideBar'));\n\nconst FaultModeling = () => {\n  const methods = useForm({\n    defaultValues: defaultFilterOptions,\n  });\n\n  const [selectedId, setSelectedId] = useState('');\n  const [showSidebar, setShowSidebar] = useState(true);\n\n  const handleSidebarShow = useCallback(() => {\n    if (showSidebar) {\n      setShowSidebar(false);\n    } else {\n      setShowSidebar(true);\n    }\n  }, [showSidebar]);\n\n  const handleRowClick = useCallback(id => {\n    setSelectedId(id.toString());\n  }, []);\n\n  return (\n    <>\n      <FormProvider {...methods}>\n        <form onChange={methods.handleSubmit}>\n          <div id=\"wrap\" className={showSidebar ? 'iq_so' : null}>\n            <div className=\"sidenav\" />\n\n            <div id=\"container\">\n              <h2 className=\"s03_05 lang\" key=\"totalModeling1\">\n                모델링\n              </h2>\n\n              <div className=\"modeling\">\n                <button\n                  onClick={() => {\n                    console.log(methods.getValues());\n                    debugger;\n                  }}\n                  type=\"button\"\n                >\n                  filter\n                </button>\n                <div className=\"md_graph f_cl\">\n                  <div className=\"w_box\">\n                    <Suspense fallback={<Spinner />}>\n                      <Breakdown id={selectedId} />\n                    </Suspense>\n                  </div>\n                  <div className=\"w_box\">\n                    <Suspense fallback={<Spinner />}>\n                      <Probability id={selectedId} />\n                    </Suspense>\n                  </div>\n                </div>\n\n                <div className=\"w_box d_list\">\n                  <Suspense fallback={<Spinner />}>\n                    <List onRowClick={handleRowClick} />\n                  </Suspense>\n                </div>\n              </div>\n              <Suspense fallback={<Spinner />}>\n                <SideBar>\n                  <SearchButton\n                    onClick={handleSidebarShow}\n                    $show={showSidebar}\n                    text=\"검색\"\n                  />\n                </SideBar>\n              </Suspense>\n            </div>\n          </div>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\n\nexport default FaultModeling;\n"],"names":["CAR_NO","DEVICE","GRADE","PROTOCOL_TYPE","useFaultModelingList","filter","copyFilter","faultCd","length","fleetId","grade","useQuery","queryKey","MODELING","list","queryFn","faultModelingApi","useFaultList","useInfiniteQuery","FAULT","getNextPageParam","lastPage","_lastPage$nextPage","nextPage","useFleetIdList","id","FLEET_ID","detail","useFrequencyGet","FREQUENCY","enabled","suspense","useFaultModelingTrendGet","FAULT_MODELING_TREND","styled","_ref","text","props","_jsx","children","_templateObject","_taggedTemplateLiteral","$show","concat","data","rest","option","useMemo","detectTime","anomalyScore","frequency","expect","forEach","info","push","detect_time","anomaly_score","tooltip","trigger","legend","xAxis","type","yAxis","series","name","ReactECharts","notMerge","lazyUpdate","theme","style","height","EmptyCharts","_Fragment","className","_jsxs","Link","href","BreakdownCharts","warning","maxSize","countNprob","count","prob","axisPointer","label","backgroundColor","right","top","itemGap","grid","left","bottom","containLabel","min","max","interval","boundaryGap","axisTick","splitLine","position","offset","axisLine","show","axisLabel","formatter","dataZoom","smooth","symbol","symbolSize","itemStyle","color","areaStyle","normal","echarts","graphic","LinearGradient","markPoint","markLine","valueIndex","lineStyle","width","ProbabilityCharts","defaultFilterOptions","protocol_type","FAULTMODELING","carNo","device","fleet_id","startDate","endDate","List","lazy","SideBar","FaultModeling","methods","useForm","defaultValues","selectedId","setSelectedId","useState","showSidebar","setShowSidebar","handleSidebarShow","useCallback","handleRowClick","toString","FormProvider","onChange","handleSubmit","onClick","console","log","getValues","Suspense","fallback","Spinner","Breakdown","Probability","onRowClick","SearchButton"],"sourceRoot":""}